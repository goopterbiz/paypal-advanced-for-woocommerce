class ApplePayCheckoutButton{static applePayConfig;static isConfigLoading;static configPromise;static applePayObject;constructor(){}async initApplePayConfig(){return ApplePayCheckoutButton.isConfigLoading?(ApplePayCheckoutButton.configPromise||(ApplePayCheckoutButton.configPromise=new Promise(((e,t)=>{let o=setInterval((()=>{ApplePayCheckoutButton.applePayConfig&&(e(ApplePayCheckoutButton.applePayConfig),clearInterval(o))}),100)}))),ApplePayCheckoutButton.configPromise):(ApplePayCheckoutButton.applePayConfig||(ApplePayCheckoutButton.isConfigLoading=!0,ApplePayCheckoutButton.applePayConfig=await ApplePayCheckoutButton.applePay().config()),ApplePayCheckoutButton.applePayConfig)}static applePay(){return ApplePayCheckoutButton.applePayObject||(ApplePayCheckoutButton.applePayObject=goopter_paypal_sdk.Applepay()),ApplePayCheckoutButton.applePayObject}render(e){0!==jQuery(e).length&&"undefined"!=typeof goopter_paypal_sdk&&("undefined"!=typeof ApplePaySession&&ApplePaySession?.supportsVersion(4)&&ApplePaySession?.canMakePayments()?this.initApplePayConfig().then((()=>{ApplePayCheckoutButton.applePayConfig.isEligible?(this.showApplePayPaymentMethod(),this.renderButton(e)):this.removeApplePayPaymentMethod()})):(console.log("apple pay not supported"),this.removeApplePayPaymentMethod(e)))}showApplePayPaymentMethod(){goopterOrder.isCheckoutPage()&&jQuery(".wc_payment_method.payment_method_goopter_ppcp_apple_pay").show()}removeApplePayPaymentMethod(e){goopterOrder.isCheckoutPage()&&jQuery(".wc_payment_method.payment_method_goopter_ppcp_apple_pay").hide(),jQuery(e).length&&jQuery(e).remove()}renderButton(e){this.containerSelector=e,this.initProductCartPage();let t=jQuery(e);t.html("");let o="black",a="plain",p="";if(void 0!==goopter_ppcp_manager.apple_pay_button_props){o=goopter_ppcp_manager.apple_pay_button_props.buttonColor,a=goopter_ppcp_manager.apple_pay_button_props.buttonType;let e=goopter_ppcp_manager.apple_pay_button_props.height;e=""!==e?"height: "+e+"px;":"",p=e}let r=jQuery('<div class="apple-pay-container" style="'+(""!==p?p:"")+'"></div>'),n=jQuery('<apple-pay-button id="btn-appl" buttonstyle="'+o+'" type="'+a+'" locale="en">');n.on("click",{thisObject:this},this.handleClickEvent),r.append(n),t.append(r)}initProductCartPage(){}static addPaymentMethodSaveParams(){let e=jQuery("input#wc-goopter_ppcp_apple_pay-new-payment-method:checked").val();const t=goopterOrder.getCartDetails();return"true"===e||t.isSubscriptionRequired?{recurringPaymentRequest:{paymentDescription:goopter_ppcp_manager.apple_pay_recurring_params.paymentDescription,regularBilling:{label:"Recurring",amount:`${t.totalAmount}`,paymentTiming:"recurring",recurringPaymentStartDate:new Date},billingAgreement:goopter_ppcp_manager.apple_pay_recurring_params.billingAgreement,managementURL:goopter_ppcp_manager.apple_pay_recurring_params.managementURL,tokenNotificationURL:ApplePayCheckoutButton.applePayConfig.tokenNotificationURL}}:{}}async handleClickEvent(e){let t=e.data.thisObject.containerSelector;const o=goopterOrder.getCartDetails();goopterOrder.showProcessingSpinner(),goopterOrder.setPaymentMethodSelector("apple_pay");const a=goopterJsErrorLogger.generateErrorId();goopterJsErrorLogger.addToLog(a,"Apple Pay Payment Started");let p=jQuery("input[name=wc-goopter_ppcp_apple_pay-payment-token]:checked").val();if("new"!==p&&void 0!==p)return void await ApplePayCheckoutButton.handleTokenPayment(e,a);o.totalAmount<=0&&goopterOrder.showError(localizedMessages.empty_cart_message);let r=[];o.shippingRequired&&(r=["postalAddress","name","email"]);let n=ApplePayCheckoutButton.addPaymentMethodSaveParams(),l={countryCode:ApplePayCheckoutButton.applePayConfig.countryCode,currencyCode:o.currencyCode,merchantCapabilities:ApplePayCheckoutButton.applePayConfig.merchantCapabilities,supportedNetworks:ApplePayCheckoutButton.applePayConfig.supportedNetworks,requiredBillingContactFields:["name","phone","email","postalAddress"],requiredShippingContactFields:r,total:{label:localizedMessages.total_amount_placeholder,amount:`${o.totalAmount}`,type:"final"},lineItems:o.lineItems,...n},i=null;try{i=new ApplePaySession(4,l)}catch(e){return console.log("ApplePay error session init error: ",e),goopterOrder.hideProcessingSpinner(),goopterOrder.showError(localizedMessages.apple_pay_pay_error+"<br/>Error:"+e),void goopterJsErrorLogger.logJsError(localizedMessages.apple_pay_pay_error+"<br/>Error:"+e,a)}let s=e=>{if(goopterOrder.triggerPaymentCancelEvent(),goopterOrder.hideProcessingSpinner(),e){let t=c(e);goopterOrder.showError(t),goopterJsErrorLogger.logJsError(t,a),i.completePayment({status:ApplePaySession.STATUS_FAILURE})}},c=e=>{if(console.error(e),"PayPalApplePayError"===e.name){let t=e.paypalDebugId;return"ERROR_VALIDATING_MERCHANT"===e.errorName?localizedMessages.error_validating_merchant+" [ApplePay DebugId:"+t+"]":localizedMessages.general_error_message+" [ApplePay DebugId:"+t+"]"}return e};i.onvalidatemerchant=e=>{ApplePayCheckoutButton.applePay().validateMerchant({validationUrl:e.validationURL}).then((e=>{i.completeMerchantValidation(e.merchantSession)})).catch((e=>{goopterOrder.hideProcessingSpinner();let t=c(e);goopterOrder.showError(t),goopterJsErrorLogger.logJsError(t,a),i.abort()}))},i.onpaymentmethodselected=e=>{i.completePaymentMethodSelection({newTotal:l.total})},i.onshippingcontactselected=async e=>{const t=goopterOrder.getCartDetails();let o={label:localizedMessages.total_amount_placeholder,amount:`${t.totalAmount}`,type:"final"};try{let t=await goopterOrder.shippingAddressUpdate({shippingDetails:e.shippingContact});if(void 0===t.totalAmount)throw new Error(localizedMessages.shipping_amount_update_error);{goopterOrder.updateCartTotalsInEnvironment(t),o.amount=t.totalAmount;let e={newTotal:o,newLineItems:t.lineItems,errors:[]};Object.assign(l,{total:o,lineItems:t.lineItems}),i.completeShippingContactSelection(e)}}catch(e){s(e)}},i.onshippingmethodselected=async e=>{i.completeShippingMethodSelection({})},i.onpaymentauthorized=async e=>{try{let o=await goopterOrder.createOrder({goopter_ppcp_button_selector:t,billingDetails:e.payment.billingContact,shippingDetails:e.payment.shippingContact,errorLogId:a}).then((e=>e.orderID));await ApplePayCheckoutButton.applePay().confirmOrder({orderId:o,token:e.payment.token,billingContact:e.payment.billingContact,shippingContact:e.payment.shippingContact}),await i.completePayment({status:ApplePaySession.STATUS_SUCCESS}),goopterOrder.approveOrder({orderID:o,payerID:""})}catch(e){s(e)}},i.oncancel=e=>{s()},i.begin()}static async handleTokenPayment(e,t){let o=e.data.thisObject.containerSelector;goopterOrder.createOrder({goopter_ppcp_button_selector:o,callback:()=>{},errorLogId:t}).catch((e=>{goopterOrder.handleCreateOrderError(e,t)}))}}